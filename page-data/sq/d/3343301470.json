{"data":{"allMdx":{"nodes":[{"id":"07f459fc-efd5-5b6b-a7f3-2c47cb30a32f","frontmatter":{"slug":null,"title":null,"website":null,"sub":null,"description":null,"descriptionArray":null}},{"id":"84e86350-863f-5b54-a596-b4d0581048f3","frontmatter":{"slug":"portfolio","title":"Royal Mint Forms","website":"https://www.royalmintforms.com","sub":"Typescript, React, Redux, GCP","description":null,"descriptionArray":["- Created a website for the Royal Mint of England with the XQ Secure Forms technology following the Royal Mint's UI design specifications.","- Implemented encrypted messaging via the XQ Javascript SDK.","- Implemented data tracking and visualization, via an interactive map, built with the open source MapLibre library."]}},{"id":"2c6f15d1-ecc0-55a1-93c5-ae4940747a3e","frontmatter":{"slug":"portfolio","title":"Server w/Authentication","website":"https://github.com/joshuaskatz/go-server-with-auth","sub":"Golang, HTML, SQL","description":null,"descriptionArray":["- This repo contains a very small and basic authentication module. The module contains the two router groups, both protected (/api/admin) and unprotected (/api).","- For the sake of example, the /albums routes are included to demonstrate the authentication middleware using JWTs."]}},{"id":"3a20f124-ce47-56ad-8dda-7ae116a4fe6b","frontmatter":{"slug":"portfolio","title":"Vault","website":"https://xqmsg.co/vault","sub":"Typescript, Electron, Node, React","description":null,"descriptionArray":["- Contributed to building an Electron-based UI interface for the XQFS file encryption service.","-  Implemented OAuth, as well as building scalable components within UI-Core for this application (Toolbar, Navigation Sidebar, etc.), while ensuring functional use in other applications as well."]}},{"id":"eafb8de0-525f-532a-b362-07b25824efb2","frontmatter":{"slug":"portfolio","title":"UI-Core","website":"https://www.npmjs.com/package/@xqmsg/ui-core, https://stg-uicore.xqmsg.com","sub":"Typescript, React, Chakra-UI, TSDX","description":null,"descriptionArray":["- Using TSDX, Typescript, and Chakra UI, I solely maintained and developed an internal UI Library to eventually be used across all XQ products. It was implemented in the Vault application as well as parts of the management portal (Policy Manager/Secure Messaging section).","- Worked 1 on 1 with our designer to create components/give insight to the provided Figma specifications.","- I was eventually wanting to implement styles via Tailwind CSS for scalability/use outside of React-based projects, as Chakra UI depends on the React framework."]}}]}}}